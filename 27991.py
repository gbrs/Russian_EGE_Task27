'''
Дана последовательность N целых положительных чисел.
Рассматриваются все пары элементов последовательности,
разность которых чётна, и в этих парах, по крайней мере,
одно из чисел пары делится на 17. Порядок элементов в паре неважен.
Среди всех таких пар нужно найти и вывести пару с
максимальной суммой элементов. Если одинаковую максимальную сумму имеет
несколько пар, можно вывести любую из них. Если подходящих пар в
последовательности нет, нужно вывести два нуля.
'''

'''
Динамически обрабатываем все входные данные.
Берем очередное (текущее) число и находим его кратность и четность.
Проверяем не является ли его сумма с максимумом той же четности, 
    но иной кратности, максимальным. Если да, то записываем произведение в MX.
    (важно проверять сумму уже здесь, т.к. возможна ситуация, 
    когда два самых больших числа кратны 17 и второе по величине число
    идет после первого. Но это важно только для кратных 17:
    только они сами с собой могут суммтроваться. Тогда для некратных 17, 
    сначала можно проверять на максимум числа и только потом на максимум суммы).
Если текущее число самое большое среди чисел такой кратности и четности, 
    то перезаписываем соответствующий mx?_?
'''

# максимумы (не/)четные (не/)кратные 17.
# MX - максимальная сумма
max17_1 = max17_2 = max0_1 = max0_2 = 0
MX = 0

with open('27991_data.txt') as f:
    # считываем количество данных чисел
    N = int(f.readline())

    # для каждого числа
    for i in range(N):
        # считываем очередное число
        current = int(f.readline())

        # определяем кратность 17 и четность числа,
        # проверяем максимальность суммы
        # и заменяем соответствующий максимум при необходимости

        # для 17 сразу проверяем сумму, т.к. максимальный результат
        # может быть суммой чисел, оба из которых кратны 17
        if current % 17 == 0:  # кратное 17
            if current % 2 != 0:  # нечетное
                if current + max0_1 > MX:
                    MX = current + max0_1
                    # запоминаем оба значения, давших максимальную сумму
                    a, b = current, max0_1
                max17_1 = max(max17_1, current)  # замена максимума
            else:  # четное
                if current + max0_2 > MX:
                    MX = current + max0_2
                    a, b = current, max0_2
                max17_2 = max(max17_2, current)

        else:  # некратное 17
            if current % 2 != 0:  # нечетное
                if current > max0_1:
                    if current + max17_1 > MX:
                        MX = current + max17_1
                        a, b = current, max17_1
                    max0_1 = current
            else:  # четное
                if current > max0_2:
                    if current + max17_2 > MX:
                        MX = current + max17_2
                        a, b = current, max17_2
                    max0_2 = current

print(*sorted([a, b], reverse=True))
