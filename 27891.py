'''
Последовательность натуральных чисел характеризуется числом Х —
наибольшим числом, кратным 14 и являющимся произведением двух элементов
последовательности с различными номерами. Гарантируется, что хотя бы одно
такое произведение в последовательности есть.
'''

'''
Динамически обрабатываем все входные данные.
Берем очередное (текущее) число и находим его кратность.
Проверяем не является ли его произведение с максимумами, 
    с которыми он дает число кратное 14, максимальным.
    Если да, то записываем произведение в MX.
    (важно проверять произведение уже здесь, т.к. возможна ситуация, 
    когда два самых больших числа кратны 14 и второе по величине число
    идет после первого. Но может это важно только для кратных 14:
    только они сами с собой могут умножаться? Тогда, сначала можно
    проверять на максимум числа и только потом на максимум произведения).
Если текущее число самое большое среди чисел такой кратности, 
    то перезаписываем соответствующий mx_?_
'''

# максимумы кратные: 14, 7 и 2 (но не кратные 14).
# Максимум среди остальных чисел - max0.
# MX - максимальное произведение
max14 = max7 = max2 = max0 = 0
MX = 0

with open('27891_data.txt') as f:
    # считываем количество данных чисел
    N = int(f.readline())

    # для каждого числа
    for i in range(N):
        # считываем очередное число
        current = int(f.readline())

        # определяем кратность числа, проверяем максимальность произведения
        # и заменяем соответствующий максимум при необходимости

        # для 14 сразу проверяем произведение, т.к. максимальный результат
        # может быть произведением чисел, оба из которых кратны 14
        if current % 14 == 0:
            if current * max(max0, max2, max7, max14) > MX:
                MX = current * max(max0, max2, max7, max14)
            if current > max14:
                max14 = current

        elif current % 7 == 0:
            if current > max7:
                if current * max(max2, max14) > MX:
                    MX = current * max(max2, max14)
                max7 = current

        elif current % 2 == 0:
            if current > max2:
                if current * max(max7, max14) > MX:
                    MX = current * max(max7, max14)
                max2 = current

        else:
            if current > max0:
                if current * max14 > MX:
                    MX = current * max14
                max0 = current

print(MX)
